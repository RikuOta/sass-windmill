@import './windmill-utils';
@import './windmill-lib';

// ------------------------------
// Default settings
// ------------------------------

$wm-breakpoints: (
    all: 0px,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px
) !default;
$wm-breakpoint-placeholder: SCR !default;
$wm-value-placeholder: VAL !default;
$wm-min-breakpoint-prefix: false !default;
$wm-min-breakpoint-addition: 1 !default;

// ------------------------------
// Main mixin
// ------------------------------

$wm-mixin-name: 'windmill';
$wm-warning-title: '[Windmill warn]: ';

@mixin windmill(
    $declarations: null,
    $values: null,
    $remove: null,
    $selector: null,
    $breakpoints: $wm-breakpoints,
    $disable: false
) {
    $declarations: wm-make-declarations-with-shorthand($declarations);
    $values: wm-make-values-with-shorthand($values);

    // Convert the value to string in $declarations of (property: value).
    @if $declarations != null {
        $declarations: wm-declarations-to-string($declarations);
    }

    @if $selector {
        $selector: wm-list-to-text($selector, $separator: ', ');
    } @else {
        $selector: wm-list-to-text(&, $separator: ', ');
    }

    @if $breakpoints == true {
        $breakpoints: $wm-breakpoints;
    }
    // If $selector contains no $wm-breakpoint-placeholder,
    // sets false to $breakpoints.
    @if $selector and length(wm-split-selector-without-substr($selector, $wm-breakpoint-placeholder)) == wm-get-selector-group-number($selector) {
        $breakpoints: false;
    }

    // Fallback for old specification.
    // Will be removed in version 1.2.0.
    @if $declarations {
        $declarations: wm-apply-fallback-to-declarations($declarations);
    }
    @if $values {
        $values: wm-apply-fallback-to-values($values);
    }

    $no-exception: wm-handle-exception($selector, $breakpoints, $declarations, $values, $disable);
    @if $no-exception {
        // Removes specific the value-name from $values.
        @if $values and $remove {
            $values: wm-remove-value-names($values, $remove...);
        }

        // Warns mismatch that the number of variables in $declarations and $values.
        @if $declarations and $values {
            @include wm-warn-var-number-mismatch($declarations, $values);
        }

        @if not $breakpoints {
            @include wm-output-declarations-without-var($selector, false, false, $declarations, $values) {
                @content;
            }
            @if $declarations and $values {
                @each $value-name in wm-get-value-names($values) {
                    @include wm-output-declarations-with-var($selector, false, false, $declarations, $values, $value-name);
                }
            }
        }

        @if $breakpoints {
            @each $breakpoint-name, $breakpoint in $breakpoints {
                @include wm-mq($breakpoint) {
                    @include wm-output-declarations-without-var($selector, $breakpoints, $breakpoint-name, $declarations, $values) {
                        @content;
                    }
                    @if $declarations and $values {
                        @each $value-name in wm-get-value-names($values) {
                            @include wm-output-declarations-with-var($selector, $breakpoints, $breakpoint-name, $declarations, $values, $value-name);
                        }
                    }
                }
            }
        }
    }
}
